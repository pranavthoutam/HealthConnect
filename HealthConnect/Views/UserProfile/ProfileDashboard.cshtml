@model ProfileDashboardViewModel

<html>
<head>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>

        .sidebar-link {
            display: block;
            text-decoration: none;
        }
            .sidebar-link:hover, .sidebar-link.active {
                color: #0d6efd; /* Bootstrap primary color */
                font-weight: bold;
            }

        .content-section {
            display: none;
        }

            .content-section.active {
                display: block;
            }
    </style>
</head>
<body class="bg-light">
    <div class="container my-5">
        <div class="border border-primary rounded bg-white shadow-sm" >
            <!-- Profile Header -->
            <div class="d-flex align-items-center p-4 border-bottom">
                <div class="bg-secondary rounded-circle" style="width: 64px; height: 64px;">
                    @if (Model.ProfilePhoto != null)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(Model.ProfilePhoto)"
                             alt="Profile Photo" class="img-fluid">
                    }
                    else
                    {
                        <i class="fas fa-user-circle text-white" style="font-size: 80px;"></i>
                    }
                </div>
                <div class="ms-3">
                    <h2 class="h5 fw-bold mb-1">@Model.Name</h2>
                    <p class="text-muted mb-0">@Model.PhoneNumber, @Model.Email</p>
                </div>
            </div>

            <!-- Sidebar and Main Content -->
            <div class="row g-0">
                <!-- Sidebar -->
                <div class="col-md-3 bg-light border-end">
                    <ul class="list-unstyled p-4">
                        <li><a href="#inclinic-appointments" class="sidebar-link active" data-target="inclinic">Clinic Appointments</a></li>
                        <hr class="sidebar-divider">
                        <li><a href="#online-consultations" class="sidebar-link" data-target="online">Online Consultations</a></li>
                        <hr class="sidebar-divider">
                        <li><a href="#completed-appointments" class="sidebar-link" data-target="completed">Feedbacks</a></li>
                    </ul>
                </div>

                <!-- Main Content -->
                <div class="col-md-9 p-4">
                    <!-- In-Clinic Appointments Section -->
                    <div id="inclinic" class="content-section active">
                        @foreach (var appointment in Model.InClinicAppointments)
                        {
                            <div class="d-flex align-items-center mb-4 border-bottom pb-3">
                                <!-- Date Section -->
                                <div class="text-center me-3" style="width: 64px;">
                                    <div class="fs-4 fw-bold text-secondary">@appointment.AppointmentDate.ToString("dd")</div>
                                    <div class="small text-secondary text-uppercase">@appointment.AppointmentDate.ToString("MMM")</div>
                                </div>
                                <!-- Appointment Details -->
                                <div class="flex-grow-1">
                                    <h5 class="mb-1">Dr. @appointment.DoctorName, @appointment.DoctorSpecialization</h5>
                                    <p class="text-secondary mb-1">@appointment.AppointmentDate</p>
                                    <p class="text-secondary mb-1">@appointment.Slot</p>
                                    <p class="text-secondary mb-1">@appointment.Location</p>

                                    <!-- Status Display -->
                                    @if (!appointment.IsCompleted)
                                    {
                                        <p class="text-muted mb-0">Upcoming</p>
                                    }
                                    else
                                    {
                                        <p class="text-danger mb-0">Completed</p>
                                    }
                                </div>
                                <!-- Action Buttons -->
                                @if (appointment.IsCompleted)
                                {
                                    <a asp-action="BookAppointment" asp-controller="User" asp-route-doctorId="@appointment.DoctorId" asp-route-date="@DateTime.Now.ToString("yyyy-MM-dd")" asp-route-IsOnline="0" class="btn btn-outline-primary ms-3">Book again</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Reschedule", new { appointmentId = appointment.AppointmentId })"
                                       class="btn btn-outline-primary ms-3 btn-reschedule"
                                       data-appointment-date="@appointment.AppointmentDate.ToString("yyyy-MM-dd")"
                                       data-slot-time="@appointment.Slot">
                                        Reschedule
                                    </a>

                                    <a href="@Url.Action("Cancel", new { appointmentId = appointment.AppointmentId })"
                                       class="btn btn-danger ms-3 btn-cancel"
                                       data-appointment-date="@appointment.AppointmentDate.ToString("yyyy-MM-dd")"
                                       data-slot-time="@appointment.Slot">
                                        Cancel
                                    </a>
                                }
                            </div>
                        }
                    </div>

                    <!-- Online Consultations Section -->
                    <div id="online" class="content-section">
                        @foreach (var appointment in Model.OnlineConsultations)
                        {
                            <div class="d-flex align-items-center mb-4 border-bottom pb-3">
                                <div class="text-center me-3" style="width: 64px;">
                                    <div class="fs-4 fw-bold text-secondary">@appointment.AppointmentDate.ToString("dd")</div>
                                    <div class="small text-secondary text-uppercase">@appointment.AppointmentDate.ToString("MMM")</div>
                                </div>
                                <div class="flex-grow-1">
                                    <h5 class="mb-1">Dr. @appointment.DoctorName, @appointment.DoctorSpecialization</h5>
                                    <p class="text-secondary mb-1">@appointment.AppointmentDate.ToString("yyyy-MM-dd")</p>
                                    <p class="text-secondary mb-1">@appointment.Slot</p>
                                    <p class="text-secondary mb-1">@appointment.Location</p>

                                    @if (!appointment.IsCompleted)
                                    {
                                        <p class="text-muted mb-0">Upcoming</p>
                                    }
                                    else
                                    {
                                        <p class="text-danger mb-0">Completed</p>
                                    }
                                </div>
                                @if (appointment.IsCompleted)
                                {
                                    <a asp-action="BookAppointment" asp-controller="User" asp-route-doctorId="@appointment.DoctorId" asp-route-date="@DateTime.Now.ToString("yyyy-MM-dd")" asp-route-IsOnline="1" class="btn btn-outline-primary ms-3">Book again</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Reschedule", new { appointmentId = appointment.AppointmentId })"
                                       class="btn btn-outline-primary ms-3 btn-reschedule"
                                       data-appointment-date="@appointment.AppointmentDate.ToString("yyyy-MM-dd")"
                                       data-slot-time="@appointment.Slot">
                                        Reschedule
                                    </a>

                                    <a href="@Url.Action("Cancel", new { appointmentId = appointment.AppointmentId })"
                                       class="btn btn-danger ms-3 btn-cancel"
                                       data-appointment-date="@appointment.AppointmentDate.ToString("yyyy-MM-dd")"
                                       data-slot-time="@appointment.Slot">
                                        Cancel
                                    </a>

                                    @if (TimeSpan.TryParse(appointment.Slot, out var slotTime))
                                    {
                                        var appointmentDateTime = appointment.AppointmentDate.Add(slotTime);
                                        if (appointmentDateTime.AddMinutes(-5) <= DateTime.Now && DateTime.Now <= appointmentDateTime.AddMinutes(15))
                                        {
                                            <a href="@appointment.MeetingLink" class="btn btn-success ms-3">Join Meeting</a>
                                        }
                                    }
                                }
                            </div>
                        }
                    </div>


                    <!-- Completed Appointments Section -->
                    <div id="completed" class="content-section">
                        @foreach (var appointment in Model.CompletedAppointments)
                        {
                            <div class="d-flex align-items-center mb-4 border-bottom pb-3">
                                <!-- Date Section -->
                                <div class="text-center me-3" style="width: 64px;">
                                    <div class="fs-4 fw-bold text-secondary">@appointment.AppointmentDate.ToString("dd")</div>
                                    <div class="small text-secondary text-uppercase">@appointment.AppointmentDate.ToString("MMM")</div>
                                </div>
                                <!-- Appointment Details -->
                                <div class="flex-grow-1">
                                    <h5 class="mb-1">Dr. @appointment.DoctorName, @appointment.DoctorSpecialization</h5>
                                    <p class="text-secondary mb-1">@appointment.AppointmentDate.ToString("d")</p>
                                    <p class="text-secondary mb-1">@appointment.Location</p>
                                </div>
                                <!-- Action Buttons -->
                                @if (!Model.Feedbacks.Any(f => f.AppointmentId == appointment.AppointmentId))
                                {
                                    <a asp-action="SubmitFeedback" asp-controller="Feedback" asp-route-appointmentId="@appointment.AppointmentId" class="btn btn-outline-primary ms-3">Feedback</a>
                                }
                                else
                                {
                                    <span class="text-primary ms-3">Feedback Submitted</span>
                                }


                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Warning -->
    <div class="modal fade" id="warningModal" tabindex="-1" aria-labelledby="warningModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="warningModalLabel">Action Restricted</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    You cannot reschedule or cancel an appointment within 3 hours of the scheduled time.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>




    <!-- Include Bootstrap Bundle JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const links = document.querySelectorAll(".sidebar-link");
            const sections = document.querySelectorAll(".content-section");

            links.forEach(link => {
                link.addEventListener("click", function (e) {
                    e.preventDefault();

                    // Remove active class from all links
                    links.forEach(l => l.classList.remove("active"));

                    // Add active class to the clicked link
                    link.classList.add("active");

                    // Hide all sections
                    sections.forEach(section => section.classList.remove("active"));

                    // Show the targeted section
                    const targetId = link.getAttribute("data-target");
                    document.getElementById(targetId).classList.add("active");
                });
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const rescheduleButtons = document.querySelectorAll(".btn-reschedule");
            const cancelButtons = document.querySelectorAll(".btn-cancel");
            const warningModal = new bootstrap.Modal(document.getElementById("warningModal"));

            const handleAction = (appointmentDate, slotTime, actionCallback) => {
                const appointmentDateTime = new Date(appointmentDate + "T" + slotTime);
                const now = new Date();

                // Check if the action is restricted
                if (appointmentDateTime - now <= 3 * 60 * 60 * 1000) { // 3 hours in milliseconds
                    warningModal.show();
                } else {
                    actionCallback();
                }
            };

            // Attach event listeners to Reschedule buttons
            rescheduleButtons.forEach(button => {
                button.addEventListener("click", function (e) {
                    e.preventDefault();
                    const appointmentDate = button.getAttribute("data-appointment-date");
                    const slotTime = button.getAttribute("data-slot-time");
                    handleAction(appointmentDate, slotTime, () => {
                        window.location.href = button.getAttribute("href");
                    });
                });
            });

            // Attach event listeners to Cancel buttons
            cancelButtons.forEach(button => {
                button.addEventListener("click", function (e) {
                    e.preventDefault();
                    const appointmentDate = button.getAttribute("data-appointment-date");
                    const slotTime = button.getAttribute("data-slot-time");
                    handleAction(appointmentDate, slotTime, () => {
                        window.location.href = button.getAttribute("href");
                    });
                });
            });
        });
    </script>
</body>
</html>
